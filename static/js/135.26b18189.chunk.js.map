{"version":3,"file":"static/js/135.26b18189.chunk.js","mappings":"uQACA,EAAuB,2BAAvB,EAA8D,gCAA9D,EAAqG,2BAArG,EAAwI,4BAAxI,EAA2K,2BAA3K,EAA6M,2BAA7M,EAAoP,gC,SCqFpP,EA9EqB,WAAO,IAAD,IAEfA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAOH,GAY3B,IARAI,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACsBC,EAAAA,EAAAA,IAAgBV,GADtC,OACQG,EADR,OAEEC,EAASD,GAFX,2CADc,yBAAC,WAAD,wBAKdQ,EACD,GAAE,CAACX,KAECG,EACD,OAAO,KAGX,IACIS,EAMAT,EANAS,cACAC,EAKAV,EALAU,MACAC,EAIAX,EAJAW,aACAC,EAGAZ,EAHAY,aACAC,EAEAb,EAFAa,SACAC,EACAd,EADAc,OAIJ,OACE,kBAAMC,UAAWC,EAAjB,WACE,wBACE,SAAC,KAAD,CACEC,GAAE,oBAAEb,EAAYc,QAAQC,aAAtB,aAAE,EAA2BC,YAA7B,QAAqC,IACvCL,UAAWC,EAFb,yBAOF,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXK,IAAG,yCAAoCZ,GACvCa,IAAKZ,KAEP,4BACE,0BACGA,EADH,IACW,IAAIa,KAAKZ,GAAca,kBAElC,wCAAgBC,KAAKC,MAAqB,GAAfd,GAA3B,QACA,uCACA,uBAAIC,KACJ,qCACA,uBAAIC,EAASA,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAAO,aAG7D,oDACA,gBAAIf,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAASC,GAAG,OAAOF,UAAWC,EAA9B,qBAIF,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAASC,GAAG,UAAUF,UAAWC,EAAjC,2BAKJ,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIT,C,8LClFDC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6FACvBC,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHY,SAOND,EAAAA,GAAAA,IAAU,sBAAuBG,GAP3B,cAOvBG,EAPuB,yBAQtBA,EAASC,KAAKC,SARQ,2CAAH,qDAWjBC,EAAS,mCAAG,WAAMC,GAAN,gFACfP,EAAU,CACZC,OAAQ,CACJC,QAASJ,EACTS,MAAAA,IAJa,SAQEV,EAAAA,GAAAA,IAAU,gBAAiBG,GAR7B,cAQfG,EARe,yBASdA,EAASC,KAAKC,SATA,2CAAH,sDAYTnC,EAAe,mCAAG,WAAMsC,GAAN,gFACrBR,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHU,SAOJD,EAAAA,GAAAA,IAAA,iBAAoBW,GAAYR,GAP5B,cAOrBG,EAPqB,yBAQpBA,EAASC,MARW,2CAAH,sDAWfK,EAAY,mCAAG,WAAMC,GAAN,gFAClBV,EAAU,CACZC,OAAQ,CACJC,QAAQJ,IAHQ,SAODD,EAAAA,GAAAA,IAAA,iBAAoBa,EAApB,YAAuCV,GAPtC,cAOlBG,EAPkB,yBAQjBA,EAASC,KAAKO,MARG,2CAAH,sDAWZC,EAAe,mCAAG,WAAMF,GAAN,gFACrBV,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHU,SAOJD,EAAAA,GAAAA,IAAA,iBAAoBa,EAApB,YAAuCV,GAPnC,cAOrBG,EAPqB,yBAQpBA,EAASC,KAAKC,SARM,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetails_link__U+v+7\",\"link_back\":\"MovieDetails_link_back__eznsm\",\"wrap\":\"MovieDetails_wrap__84S6L\",\"image\":\"MovieDetails_image__c1FeV\",\"main\":\"MovieDetails_main__Q9jrF\",\"list\":\"MovieDetails_list__dbNMP\",\"list_item\":\"MovieDetails_list_item__rcrs7\"};","import Loader from \"components/Loader\";\nimport { Suspense, useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { NavLink, Outlet, useLocation, useParams } from \"react-router-dom\"\nimport { getMovieDetails } from \"services/API\";\nimport css from './MovieDetails.module.css'\n\nconst MovieDetails = () => {\n     \n    const { id } = useParams();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const refLocation = useRef(location);\n    // const backLinkHref = location.state?.from ?? '/';\n    \n\n    useEffect(() => {\n      async function getMovie() {\n        const movie = await getMovieDetails(id);\n        setMovie(movie);\n      }\n      getMovie();\n    }, [id]);\n\n    if (!movie) {\n        return null;\n    }\n    \n    const {\n        backdrop_path,\n        title,\n        release_date,\n        vote_average,\n        overview,\n        genres,\n    } = movie;\n\n\n    return (\n      <main className={css.main}>\n        <p>\n          <NavLink\n            to={refLocation.current.state?.from ?? '/'}\n            className={css.link_back}\n          >\n            Get back\n          </NavLink>\n        </p>\n        <div className={css.wrap}>\n          <img\n            className={css.image}\n            src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n            alt={title}\n          />\n          <div>\n            <h2>\n              {title} {new Date(release_date).getFullYear()}\n            </h2>\n            <p>User score: {Math.floor(vote_average * 10)}%</p>\n            <h3>Overview:</h3>\n            <p>{overview}</p>\n            <h3>Genres:</h3>\n            <p>{genres ? genres.map(genre => genre.name).join(' ') : '-'}</p>\n          </div>\n        </div>\n        <h2>Additional information</h2>\n        <ul className={css.list}>\n          <li className={css.list_item}>\n            <NavLink to=\"cast\" className={css.link}>\n              Cast\n            </NavLink>\n          </li>\n          <li className={css.list_item}>\n            <NavLink to=\"reviews\" className={css.link}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n    );\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '64afbe7e98104731aad90684412bb048';\n\nexport const getTrendingMovies = async () => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get('/trending/movie/day', options);\n    return response.data.results;\n}\n\nexport const getMovies = async query => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n            query,\n        }\n    }\n\n    const response = await axios.get('/search/movie', options)\n    return response.data.results;\n}\n\nexport const getMovieDetails = async movie_id => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movie_id}`, options)\n    return response.data;\n}\n\nexport const getMovieCast = async movieId => {\n    const options = {\n        params: {\n            api_key:API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movieId}/credits`, options);\n    return response.data.cast;\n}\n\nexport const getMovieReviews = async movieId => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movieId}/reviews`, options);\n    return response.data.results;\n}"],"names":["id","useParams","useState","movie","setMovie","location","useLocation","refLocation","useRef","useEffect","getMovieDetails","getMovie","backdrop_path","title","release_date","vote_average","overview","genres","className","css","to","current","state","from","src","alt","Date","getFullYear","Math","floor","map","genre","name","join","Suspense","fallback","Loader","axios","API_KEY","getTrendingMovies","options","params","api_key","response","data","results","getMovies","query","movie_id","getMovieCast","movieId","cast","getMovieReviews"],"sourceRoot":""}