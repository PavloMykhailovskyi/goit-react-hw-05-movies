{"version":3,"file":"static/js/681.8533882f.chunk.js","mappings":"yNAoCA,UA/BgB,WACZ,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGAC0BC,EAAAA,EAAAA,IAAgBN,GAD1C,OACUG,EADV,OAEIC,EAAWD,GAFf,2CADY,yBAAC,WAAD,wBAMZI,EACH,GAAE,CAACP,IAECG,GAKD,6BACKA,EAAQK,QAAU,wBACpBL,EAAQM,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASX,EAAS,EAATA,GAC7B,OAAO,2BACH,qCAAaU,MACb,uBAAIC,MAFQX,EAInB,OACM,uEAZF,IAed,C,8LChCDY,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6FACvBC,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHY,SAOND,EAAAA,GAAAA,IAAU,sBAAuBG,GAP3B,cAOvBG,EAPuB,yBAQtBA,EAASC,KAAKC,SARQ,2CAAH,qDAWjBC,EAAS,mCAAG,WAAMC,GAAN,gFACfP,EAAU,CACZC,OAAQ,CACJC,QAASJ,EACTS,MAAAA,IAJa,SAQEV,EAAAA,GAAAA,IAAU,gBAAiBG,GAR7B,cAQfG,EARe,yBASdA,EAASC,KAAKC,SATA,2CAAH,sDAYTG,EAAe,mCAAG,WAAMC,GAAN,gFACrBT,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHU,SAOJD,EAAAA,GAAAA,IAAA,iBAAoBY,GAAYT,GAP5B,cAOrBG,EAPqB,yBAQpBA,EAASC,MARW,2CAAH,sDAWfM,EAAY,mCAAG,WAAMC,GAAN,gFAClBX,EAAU,CACZC,OAAQ,CACJC,QAAQJ,IAHQ,SAODD,EAAAA,GAAAA,IAAA,iBAAoBc,EAApB,YAAuCX,GAPtC,cAOlBG,EAPkB,yBAQjBA,EAASC,KAAKQ,MARG,2CAAH,sDAWZrB,EAAe,mCAAG,WAAMoB,GAAN,gFACrBX,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHU,SAOJD,EAAAA,GAAAA,IAAA,iBAAoBc,EAApB,YAAuCX,GAPnC,cAOrBG,EAPqB,yBAQpBA,EAASC,KAAKC,SARM,2CAAH,qD","sources":["components/Reviews.jsx","services/API.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getMovieReviews } from \"services/API\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState();\n\n    useEffect(() => {\n        async function getMovieInfo() {\n            const reviews = await getMovieReviews(id);\n            setReviews(reviews);\n        }\n\n        getMovieInfo()\n    }, [id])\n\n    if (!reviews) {\n        return null;\n    }\n\n    return (\n        <section>\n            {reviews.length ? (<ul>\n          {reviews.map(({ author, content, id }) => {\n              return <li key={id}>\n                  <h3>Author: {author}</h3>\n                  <p>{content}</p>\n            </li>;\n          })}\n        </ul>) : <p>We don't have any reviews for this movie.</p>}\n        </section>\n    );\n}\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '64afbe7e98104731aad90684412bb048';\n\nexport const getTrendingMovies = async () => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get('/trending/movie/day', options);\n    return response.data.results;\n}\n\nexport const getMovies = async query => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n            query,\n        }\n    }\n\n    const response = await axios.get('/search/movie', options)\n    return response.data.results;\n}\n\nexport const getMovieDetails = async movie_id => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movie_id}`, options)\n    return response.data;\n}\n\nexport const getMovieCast = async movieId => {\n    const options = {\n        params: {\n            api_key:API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movieId}/credits`, options);\n    return response.data.cast;\n}\n\nexport const getMovieReviews = async movieId => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movieId}/reviews`, options);\n    return response.data.results;\n}"],"names":["id","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","getMovieInfo","length","map","author","content","axios","API_KEY","getTrendingMovies","options","params","api_key","response","data","results","getMovies","query","getMovieDetails","movie_id","getMovieCast","movieId","cast"],"sourceRoot":""}