{"version":3,"file":"static/js/597.5888b1f7.chunk.js","mappings":"yNAiDA,UA5Ca,WACT,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGAC4BC,EAAAA,EAAAA,IAAaN,GADzC,OACUO,EADV,OAEIH,EAAQG,GAFZ,4CADY,uBAAC,WAAD,wBAMZC,EACH,GAAE,CAACR,IAECG,GAKH,8BACE,wBACGA,EAAKM,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWV,EAA6B,EAA7BA,GAAIW,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChC,OACE,0BACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKH,IAGP,KAEF,4BACE,wBAAKA,KACL,wCACA,uBAAID,SAZCV,EAgBZ,QAxBI,IA4Bd,C,8LC7CDe,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,6FACvBC,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHY,SAOND,EAAAA,GAAAA,IAAU,sBAAuBG,GAP3B,cAOvBG,EAPuB,yBAQtBA,EAASC,KAAKC,SARQ,2CAAH,qDAWjBC,EAAS,mCAAG,WAAMC,GAAN,gFACfP,EAAU,CACZC,OAAQ,CACJC,QAASJ,EACTS,MAAAA,IAJa,SAQEV,EAAAA,GAAAA,IAAU,gBAAiBG,GAR7B,cAQfG,EARe,yBASdA,EAASC,KAAKC,SATA,2CAAH,sDAYTG,EAAe,mCAAG,WAAMC,GAAN,gFACrBT,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHU,SAOJD,EAAAA,GAAAA,IAAA,iBAAoBY,GAAYT,GAP5B,cAOrBG,EAPqB,yBAQpBA,EAASC,MARW,2CAAH,sDAWfhB,EAAY,mCAAG,WAAMsB,GAAN,gFAClBV,EAAU,CACZC,OAAQ,CACJC,QAAQJ,IAHQ,SAODD,EAAAA,GAAAA,IAAA,iBAAoBa,EAApB,YAAuCV,GAPtC,cAOlBG,EAPkB,yBAQjBA,EAASC,KAAKnB,MARG,2CAAH,sDAWZ0B,EAAe,mCAAG,WAAMD,GAAN,gFACrBV,EAAU,CACZC,OAAQ,CACJC,QAASJ,IAHU,SAOJD,EAAAA,GAAAA,IAAA,iBAAoBa,EAApB,YAAuCV,GAPnC,cAOrBG,EAPqB,yBAQpBA,EAASC,KAAKC,SARM,2CAAH,qD","sources":["components/Cast.jsx","services/API.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getMovieCast } from \"services/API\";\n\nconst Cast = () => {\n    const { id } = useParams();\n    const [cast, setCast] = useState();\n\n    useEffect(() => {\n        async function getMovieInfo() {\n            const movieCast = await getMovieCast(id);\n            setCast(movieCast);\n        }\n\n        getMovieInfo();\n    }, [id])\n\n    if (!cast) {\n        return null;\n    }\n\n    return (\n      <section>\n        <ul>\n          {cast.map(({ character, id, name, profile_path }) => {\n            return (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={name}\n                  />\n                ) : (\n                  '-'\n                )}\n                <div>\n                  <h3>{name}</h3>\n                  <h4>Character:</h4>\n                  <p>{character}</p>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    );\n}\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '64afbe7e98104731aad90684412bb048';\n\nexport const getTrendingMovies = async () => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get('/trending/movie/day', options);\n    return response.data.results;\n}\n\nexport const getMovies = async query => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n            query,\n        }\n    }\n\n    const response = await axios.get('/search/movie', options)\n    return response.data.results;\n}\n\nexport const getMovieDetails = async movie_id => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movie_id}`, options)\n    return response.data;\n}\n\nexport const getMovieCast = async movieId => {\n    const options = {\n        params: {\n            api_key:API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movieId}/credits`, options);\n    return response.data.cast;\n}\n\nexport const getMovieReviews = async movieId => {\n    const options = {\n        params: {\n            api_key: API_KEY,\n        }\n    }\n\n    const response = await axios.get(`/movie/${movieId}/reviews`, options);\n    return response.data.results;\n}"],"names":["id","useParams","useState","cast","setCast","useEffect","getMovieCast","movieCast","getMovieInfo","map","character","name","profile_path","src","alt","axios","API_KEY","getTrendingMovies","options","params","api_key","response","data","results","getMovies","query","getMovieDetails","movie_id","movieId","getMovieReviews"],"sourceRoot":""}